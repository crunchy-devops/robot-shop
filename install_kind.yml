---
- name: Install KinD
  hosts: all
  become: true
  tasks:
    - name: install KinD
      get_url:
        url:  https://github.com/kubernetes-sigs/kind/releases/download/v0.24.0/kind-linux-amd64
        dest: /usr/local/bin/kind
        mode: 0755
    - name:  install snap
      apt:
        name: snap
        state: present
        update_cache: yes
    - name: install kubectl
      shell: snap install kubectl --classic
    - name: install helm
      shell: snap install helm --classic
    - name: copy KinD config cluster file
      copy:
        src: 'leanpub/kind-config-cluster.yml'
        dest: '/home/ubuntu'
    - name: install nfs package
      apt:
        name:
          - nfs-kernel-server
        state: present
        update_cache: yes
    - name: erase nfs directories
      shell: |
        sudo rm -Rf /mnt/nfs_share/*
        sudo rm -Rf /mnt/dump/*
      ignore_errors: yes
    - name: install multiple shell for nfs disk
      shell: |
        sudo mkdir -p /mnt/nfs_share/data
        sudo mkdir -p /mnt/dump/file
        sudo chmod 777  /mnt/nfs_share
        sudo chmod 777 /mnt/dump
        sudo chown nobody:nogroup /mnt/nfs_share
        sudo chown nobody:nogroup /mnt/dump
    - name: Copy Dump file
      copy:
        src: mysql/scripts/10-dump.sql.gz
        dest: /mnt/dump/file/10-dump.sql.gz
    - name: gzip dump mysql file
      shell: gzip -d /mnt/dump/file/10-dump.sql.gz
    - name: insert a block file in exports
      blockinfile:
        path: /etc/exports
        block: |
          /mnt/nfs_share *(rw,sync,no_subtree_check,no_root_squash)
          /mnt/dump  *(rw,sync,no_subtree_check,no_root_squash)
        marker: "# ANSIBLE MANAGED BLOCK"
        state: present
        check_mode: yes
      register: block_check
      failed_when: (block_check is changed)
    - name: enable nfs-server
      shell: |
        sudo exportfs -rav
        sudo systemctl enable --now nfs-server
    - name: Check if the cluster exists
      shell: kind get clusters
      register: result
    - name: Return value
      debug:
        msg: "{{ result.stdout }}"
    - name: Delete cluster KinD if already there
      become_user: "{{ ansible_ssh_user }}"
      shell:
        cmd: kind delete cluster --name remote
        chdir: /home/ubuntu
      when: result.stdout == "remote"
    - name: create KinD cluster
      become_user: "{{ ansible_ssh_user }}"
      shell:
        cmd: kind create cluster --name remote --config kind-config-cluster.yml
        chdir: /home/ubuntu
    - name: set in KinD nfs kubernetes objects
      become_user: "{{ ansible_ssh_user }}"
      shell: curl -skSL https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/v4.9.0/deploy/install-driver.sh | bash -s v4.9.0 --